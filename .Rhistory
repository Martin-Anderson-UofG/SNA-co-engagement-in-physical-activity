# PA with alter
networks$alter$PA_with <- as.factor(networks$alter$PA_with)
levels(networks$alter$PA_with)
# Ease with alter (merge no/don't know responses)
networks$alter$ease_with <- as.factor(networks$alter$ease_with)
levels(networks$alter$ease_with)
networks$alter <- networks$alter %>%
mutate(ease_with = factor(case_when(
ease_with %in% c("no", "don't know") ~ "no or don't know",
TRUE ~ as.character(ease_with)
)))
# Can count on alter
networks$alter$count_on <- as.factor(networks$alter$count_on)
networks$alter <- networks$alter %>%
mutate(count_on = factor(case_when(
count_on %in% c("no", "don't know") ~ "no or don't know",
TRUE ~ as.character(count_on)
)))
# Relationship to alter
networks$alter$relationship <- as.factor(networks$alter$relationship)
# re-coding EGO characteristics
# relationship status
networks$ego <- networks$ego %>%
mutate(married = factor(case_when(
relationship_statustext == 'Married' ~ 'Married',
TRUE ~ 'Not married'
)))
# gender
networks$ego <- networks$ego %>%
mutate(woman = factor(case_when(
gendertext == 'female' ~ 'female',
TRUE ~ 'not female'
)))
# retired
networks$ego <- networks$ego %>%
mutate(retired = factor(case_when(
employment_statustext == 'Retired' ~ 'Retired',
TRUE ~ 'Not retired'
)))
# loneliness
networks$ego <- networks$ego %>%
mutate(ego.lonely = dplyr::recode(lonely_directtext,
'Often or always' = 5,
'Some of the time' = 4,
'Occasionally' = 3,
'Hardly ever' = 2,
'Never' = 1))
# frailty (already coded but renaming for consistency)
networks$ego <- networks$ego %>%
mutate(ego.frailty = frailty_summed)
# mental health (phq4)
networks$ego <- networks$ego %>%
mutate(ego.mental.health = dplyr::recode(phq4_total_cat,
'Severe' = 1,
'Moderate' = 2,
'Mild' = 3,
'Normal' = 4))
# dog owner (already coded but re-naming)
networks$ego <- networks$ego %>%
mutate(ego.dog.owner = dog_ownertext)
# re-coding ALTER characteristics
# alter gender
networks$alter <- networks$alter %>%
mutate(alter.woman = factor(case_when(
alter_gender == 'female' ~ 'female',
TRUE ~ 'not female'
)))
# alter age (already coded but renaming)
networks$alter <- networks$alter %>%
mutate(alter.age.cat = alter_age)
# alter geographic closeness (renaming)
networks$alter <- networks$alter %>%
mutate(alter.geo.close = live_close)
# alter health
networks$alter <- networks$alter %>%
mutate(alter.health = alter_health) # need to make 6 values into NA
# length of time known
networks$alter <- networks$alter %>%
mutate(alter.rel.length = rel_length)
# frequency of interaction
networks$alter <- networks$alter %>%
mutate(alter.freq.interact = freq)
###
networks$alter$alter_ids <- networks$alter$.altID
networks$alter$alter_ids
# change networks object to igraph
i_test <- egor::as_igraph(networks,
directed = FALSE)
# Degree and between directly added to igraph object
i_test <- purrr::map(i_test, ~{.x$a_degree = degree(.x);.x})
# Loop to extract for all
alter_data <- list()
for (i in 1:140) {
alter_data[[i]] <- data.frame(alter_ids        = V(i_test[[i]])$alter_ids,
degree      = i_test[[i]]$a_degree)
}
# Unlist to dataframe #
df_alter_data <- bind_rows(lapply(alter_data, bind_rows))
networks$alter <- dplyr::left_join(networks$alter, df_alter_data, by = "alter_ids")
rm(list=ls())
library(stringr)
library(foreign)
library(ggplot2)
library(MASS)
library(Hmisc)
library(reshape2)
library(MASS)
library(viridisLite)
library(lme4)
library(egor)
library(cleaner)
library(descr)
library(ggplot2)
library(ggeffects)
library(tidyverse)
library(car)
library(magrittr)
library(skimr)
library(janitor)
library(broom.mixed)
library(stargazer)
library(psych)
library(gridExtra)
library(dplyr)
# Set working directory to folder location
# Load data
# Note: data has been cleaned and identifying info removed
# E.g., ego/alter names/DOB/location
ego <- read.csv("ego_cleaned.csv")
atts <- read.csv("atts_cleaned.csv")
edge <- read.csv("edge_cleaned.csv")
# create network object
networks <- egor(alters = atts,
egos = ego,
aaties = edge,
ID.vars = list(ego    = "networkcanvasegouuid",
alter  = "networkcanvasuuid",
source = "networkcanvassourceuuid",
target = "networkcanvastargetuuid"))
# re-coding NETWORK characteristics
# Gender EI composition
networks$ego$gendertext <- as_factor(networks$ego$gendertext)
networks$alter$alter_gender <- as_factor(networks$alter$alter_gender)
networks$ego$gendertext <- dplyr::recode(networks$ego$gendertext,
"Male" = "male",
"Female" = "female",
"Other" = "other")
gender_EI <-
comp_ei(networks, alt.attr = "alter_gender", ego.attr = "gendertext") %>%
rename(gender_EI = ei)
networks <-
networks %>%
activate(ego) %>%
left_join(gender_EI)
#Age EI
networks$alter$alter_age <- as_factor(networks$alter$alter_age) # factor
networks <- networks %>%
mutate(
age_cat_ego = case_when(
age_at_interview < 20 ~ "less than 20",
age_at_interview >= 20 & age_at_interview <= 30 ~ "21 to 30",
age_at_interview > 30 & age_at_interview <= 40 ~ "31 to 40",
age_at_interview > 40 & age_at_interview <= 50 ~ "41 to 50",
age_at_interview > 50 & age_at_interview <= 60 ~ "51 to 60",
age_at_interview > 60 & age_at_interview <= 70 ~ "61 to 70",
age_at_interview > 70 & age_at_interview <= 80 ~ "71 to 80",
age_at_interview > 80 ~ "older than 80",
TRUE ~ NA_character_  # If none of the conditions match, set to NA
)
)
age_EI <-
egor::comp_ei(networks, alt.attr = "alter_age", ego.attr = "age_cat_ego") %>%
rename(age_EI = ei)
networks <-
networks %>%
activate(ego) %>%
left_join(age_EI)
# Network size
netsize <-
networks %>%
activate(alter) %>%
group_by(.egoID) %>%
summarise(size = n())
networks <- left_join(networks, netsize)
# Network density
dens <- ego_density(networks)
networks$ego$density <- dens$density
# EI alter-alter ties
# Gender EI calculate & add to networks object
alter_ei_gender <- EI(networks, alter_gender, include.ego = FALSE, rescale = TRUE)
networks$ego <- left_join(networks$ego, alter_ei_gender, by = ".egoID")
#rename
networks$ego <- networks$ego %>%
rename(alter_ei_gender = ei,
alter_ei_male = male,
alter_ei_female = female)
#remove other and <NA>
networks$ego <- networks$ego[, !(colnames(networks$ego) %in% c("other", "<NA>"))]
# Age EI calculate & add to networks object
alter_ei_age <- EI(networks, alter_age, include.ego = FALSE, rescale = TRUE)
networks$ego <- left_join(networks$ego, alter_ei_age, by = ".egoID")
#rename
networks$ego <- networks$ego %>%
rename(alter_ei_age = ei)
#remove individual age cats
networks$ego <- networks$ego[, !(colnames(networks$ego) %in% c("less than 20",
"21 to 30", "31 to 40",
"41 to 50", "51 to 60",
"61 to 70", "71 to 80",
"older than 80", "<NA>"))]
# PA EI calculate & add to networks object
alter_ei_pa <- EI(networks, PA_with, include.ego = FALSE, rescale = TRUE)
networks$ego <- left_join(networks$ego, alter_ei_pa, by = ".egoID")
#rename
networks$ego <- networks$ego %>%
rename(alter_ei_pa = ei,
alter_ei_pa_no = no,
alter_ei_pa_yes = yes)
# re-coding TIE characteristics
# Closeness (make 0=NA)
networks$alter <- networks$alter %>%
mutate(close = case_when(
close == 0 ~ NA_real_,
TRUE ~ close
))
# PA with alter
networks$alter$PA_with <- as.factor(networks$alter$PA_with)
levels(networks$alter$PA_with)
# Ease with alter (merge no/don't know responses)
networks$alter$ease_with <- as.factor(networks$alter$ease_with)
levels(networks$alter$ease_with)
networks$alter <- networks$alter %>%
mutate(ease_with = factor(case_when(
ease_with %in% c("no", "don't know") ~ "no or don't know",
TRUE ~ as.character(ease_with)
)))
